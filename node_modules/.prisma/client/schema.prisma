generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model dashboard_statuses {
  id         Int          @id @default(dbgenerated("nextval('_dashboard_statuses_id_seq'::regclass)"))
  status     String?      @db.VarChar(64)
  dashboards dashboards[]

  @@map("_dashboard_statuses")
}

model platforms {
  id               Int                @id @default(dbgenerated("nextval('_platforms_id_seq'::regclass)"))
  platform         String?            @db.VarChar(64)
  widget_templates widget_templates[]
  widgets          widgets[]

  @@map("_platforms")
}

model widget_templates {
  id                 Int        @id @default(dbgenerated("nextval('_widget_templates_id_seq'::regclass)"))
  widget_title       String?    @db.VarChar(255)
  widget_description String?
  platform_id        Int?
  default_settings   Json?
  widget_sizes       Json?
  widget_types       Json?
  platforms          platforms? @relation(fields: [platform_id], references: [id], onUpdate: SetNull, map: "_widget_templates__platforms_id_fk")
  widgets            widgets[]

  @@map("_widget_templates")
}

model dashboards {
  id                  Int                 @id(map: "dashboard_config_pkey") @default(autoincrement())
  user_id             Int?
  dashboard_name      String?             @db.VarChar(255)
  dashboard_status_id Int?
  start_ts            DateTime?           @default(now()) @db.Timestamp(6)
  end_ts              DateTime?           @default(now()) @db.Timestamp(6)
  dashboard_settings  Json?
  dashboard_type_id   Int?                @default(1)
  reference_id        Int?
  dashboard_statuses  dashboard_statuses? @relation(fields: [dashboard_status_id], references: [id], onUpdate: SetNull, map: "dashboards__dashboard_statuses_id_fk")
  dashboard_type      dashboard_type?     @relation(fields: [dashboard_type_id], references: [id], onDelete: SetDefault, onUpdate: SetDefault, map: "dashboards__dashboard_type_id_fk")
  sharing_info        sharing_info[]
  widgets             widgets[]
}

model sharing_info {
  id           Int         @id @default(autoincrement())
  dashboard_id Int?
  email        String?     @db.VarChar(255)
  user_id      Int?
  dashboards   dashboards? @relation(fields: [dashboard_id], references: [id], onDelete: Cascade, map: "sharing_info_dashboards_id_fk")
}

model widgets {
  id                 Int               @id @default(autoincrement())
  dashboard_id       Int?
  platform_id        Int?
  widget_template_id Int?
  widget_account_id  String?           @db.VarChar(50)
  widget_property_id String?           @db.VarChar(64)
  widget_start_ts    DateTime?         @default(now()) @db.Timestamp(6)
  widget_end_ts      DateTime?         @default(now()) @db.Timestamp(6)
  widget_settings    Json?
  widget_size        widget_size?
  widget_type        widget_type?
  is_hidden          Boolean?          @default(false)
  widget_name        String?           @db.VarChar(256)
  platforms          platforms?        @relation(fields: [platform_id], references: [id], onUpdate: SetNull, map: "widgets__platforms_id_fk")
  widget_templates   widget_templates? @relation(fields: [widget_template_id], references: [id], onUpdate: SetNull, map: "widgets__widget_templates_id_fk")
  dashboards         dashboards?       @relation(fields: [dashboard_id], references: [id], onDelete: SetDefault, onUpdate: SetDefault, map: "widgets_dashboards_id_fk")
}

model dashboard_type {
  id             Int          @id @default(dbgenerated("nextval('_dashboard_type_id_seq'::regclass)"))
  dashboard_type String?      @db.VarChar(128)
  dashboards     dashboards[]

  @@map("_dashboard_type")
}

model collection_configs {
  id    Int    @id(map: "_collection_config_pkey") @default(dbgenerated("nextval('_collection_config_id_seq'::regclass)"))
  title String @db.VarChar(128)
  value Int

  @@map("_collection_configs")
}

model collection_admin_configs {
  id                            Int       @id(map: "collection_admin_config_pkey") @default(autoincrement())
  workspace_id                  Int
  total_posts                   Int?      @default(0)
  total_comments                Int?      @default(0)
  profile_collection_freq       Int?      @default(0)
  posts_collection_freq         Int?      @default(0)
  campaign_post_collection_freq Int?      @default(0)
  stories_collection_freq       Int?      @default(0)
  created_by_user_id            Int
  created_ts                    DateTime? @default(now()) @db.Timestamptz(6)
  updated_ts                    DateTime? @default(now()) @db.Timestamptz(6)
}

enum widget_size {
  default
  large
  medium
  small
}

enum widget_type {
  piechart
  barchart
  linegraph
  counter
  table
  areachart
}
